openapi: 3.0.0
# Added by API Auto Mocking Plugin
servers:
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/JesusCrie/DownloadDashboard/1.0.0
  - description: Localhost API
    url: http://localhost:8000
info:
  version: "1.0.0"
  title: Download Dashboard
  license:
    name: GPL-3.0
    url: https://github.com/JesusCrie/download-dashboard/blob/master/LICENSE
security:
  - jwt_token:
      - read
      - write
tags:
  - name: auth
  - name: metrics
  - name: aria2
paths:

  /auth:
    post:
      tags:
        - auth
      operationId: authCreate
      summary: Acquire a JWT token
      description: |
        Acquire a JWT token in exchange of a password
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthHolder'
      responses:
        200:
          description: Authentification successfull
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenHolder'
          links:
            refresh:
              operationId: authRefresh
        403:
          description: Unauthorized, wrong password
        422:
          description: Malformed payload

  /auth/refresh:
    get:
      tags:
        - auth
      security: []
      operationId: authRefresh
      summary: Refresh a JWT token
      description: |
        Acquire a new JWT token by providing a non-expired one.
        The previous token will still be valid until its expiracy.
      responses:
        200:
          description: Authentification successfull
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenHolder'
        403:
          description: Invalid token provided
          links:
            login:
              operationId: authCreate

  /health:
    get:
      tags:
        - metrics
      operationId: healthCheck
      summary: Check health of service
      description: |
        Check the health of the service based on the response code.
      responses:
        204:
          description: Ok
        503:
          description: Ko

  /status:
    get:
      tags:
        - metrics
      security: []
      operationId: metricsGet
      summary: Gather metrics
      description: |
        Gather the status of the host.
        Will respond with only the specified fields or all if not specified.
        Invalid fields will be ignored.
      parameters:
        - in: query
          name: fields
          description: Pass an optional list of fields to include
          required: false
          schema:
            type: array
            items:
              enum:
                - distro
                - cpu
                - memory
                - netspeed
                - disk
                - aria
                - aria-dl
      responses:
        200:
          description: Host status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusValues'
        400:
          description: Bad input parameter
        403:
          description: Forbidden
          links:
            login:
              operationId: authCreate

  /aria2/list:
    get:
      tags:
        - aria2
      security: []
      operationId: ariaList
      summary: List aria2 tracks
      description: |
        Query the downloads in progress on the host
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AriaTrack'
        403:
          description: Forbidden
          links:
            login:
              operationId: authCreate
        503:
          description: Aria is not started

  /aria2/show/{gid}:
    get:
      tags:
        - aria2
      security: []
      operationId: ariaShow
      summary: Get a specific aria2 track
      description: |
        Query a track by its GID
      parameters:
        - in: path
          name: gid
          description: The GID of the download to query
          required: true
          schema:
            type: string
            minLength: 16
            maxLength: 16
            example: 2089b05ecca3d829
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AriaTrack'
        404:
          description: Not found
        403:
          description: Forbidden
          links:
            login:
              operationId: authCreate

  /aria2/new:
    post:
      tags:
        - aria2
      security: []
      operationId: ariaNew
      summary: Queue a new download
      description: |
        Queue a new download with a list of URIs and an optional option parameters.
        Supports HTTP(S)/FTP/magnet URIs, see the option object for auth and trackers.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AriaTrackDef'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AriaTrack'
          links:
            show:
              operationId: ariaShow
        403:
          description: Forbidden
          links:
            login:
              operationId: authCreate
        422:
          description: Malformed payload
        503:
          description: Aria isn't started

components:
  securitySchemes:
    jwt_token:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    AuthHolder:
      description: Holds sent auth info
      type: object
      properties:
        password:
          type: string
          format: password
          example: AVeryGoodPassword123
      required:
        - password

    TokenHolder:
      description: Holds received auth info
      type: object
      properties:
        token:
          type: string
          format: password
          example: xxxxx.yyyyy.zzzzz
      required:
        - token

    StatusValues:
      description: Represent the status of the host
      type: object
      properties:
        distro:
          description: Short name of the distro
          type: string
          example: raspbian
        uptime:
          description: Seconds since startup
          type: integer
          format: int64
          example: 1564695250
        cpu:
          description: CPU load in percent
          type: number
          format: float
          example: 0.45
        memory:
          description: Memory usage in percent
          type: number
          format: float
          example: 0.12
        netspeed:
          description: Current network speed in bytes/s
          type: integer
          format: int64
          example: 1500000
        disk:
          description: Partition usage in percent
          type: number
          format: float
          example: 0.43
        aria:
          description: Aria2 version or null if offline
          type: string
          example: 'v1.2.3'
        aria_active:
          description: Amount of downloads in progress
          type: number
          example: 25

    AriaTrack:
      description: Represent an aria2 download (track)
      type: object
      properties:
        gid:
          description: Unique identifier used by aria2
          type: string
          minLength: 16
          maxLength: 16
          example: 2089b05ecca3d829
        status:
          description: Current status of the download
          type: string
          enum:
            - active
            - waiting
            - paused
            - error
            - complete
            - removed
          example: active
        dir:
          description: Directory where the download will be saved
          type: string
          example: /some/path/to/folder
        files:
          description: Files composing the download (for multi torrents), usually only one element
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/AriaFile'
        size_total:
          description: Total size in bytes
          type: integer
          format: int64
          example: 1750000000
        size_completed:
          description: Downloaded size in bytes
          type: integer
          format: int64
          example: 1000000000
        piece_amount:
          description: The amount of pieces
          type: integer
          format: int32
          example: 10
        piece_size:
          description: The size of the pieces in bytes
          type: integer
          format: int64
          example: 10000000
        bitfield:
          description: Representation of the progress piece by piece
          type: string
          format: byte
          example: 0000000
        connection_amount:
          description: Amount of connections used for this track
          type: integer
          format: int32
          example: 2
        speed_down:
          description: Download speed in bytes/s
          type: integer
          format: int64
          example: 1500000
        elapsed_time:
          description: Cumulated amount of seconds downloading
          type: integer
          format: int64
          example: 5400
        error:
          description: The eventual error, only if stopped/completed
          type: object
          properties:
            error_code:
              description: Error code, equivalent to the EXIT_CODE
              type: integer
              format: int32
              example: 3
            error_message:
              description: Error message associated with error code
              type: string
              example: Not found
          required:
            - error_code
            - error_message
      required:
        - gid
        - status
        - dir
        - files
        - size_total
        - size_completed
        - piece_amount
        - piece_size
        - bitfield
        - connection_amount
        - speed_down
        - elapsed_time

    AriaTrackDef:
      description: Represent the information needed to queue a new track
      type: object
      properties:
        uris:
          description: A list of URIs pointing to the same resource; if a magnet URI, only the first will be used
          type: array
          minItems: 1
          items:
            type: string
            example: https://example.com/file.txt
        options:
          $ref: '#/components/schemas/AriaTrackOptions'
        position:
          description: The position of the track in the queue; 0 means on the top
          type: integer
          format: int32
          minimum: 0
          example: 0
      required:
        - uris

    AriaTrackOptions:
      description: The option to specify for one track
      type: object
      properties:
        dir:
          description: The directory to put the file to
          type: string
          example: /some/directory
        out:
          description: File name of the downloaded file, reltaive to dir
          type: string
          example: myFile.txt
        auto_file_renaming:
          description: Rename the file if it already exists
          type: boolean
          default: true
        max_conn_per_server:
          description: Maxiumum connection to one server
          type: integer
          format: int32
          default: 1
          minimum: 0
        max_speed:
          description: Maximum download limit in bytes/s, 0 for unlimited
          type: integer
          format: int64
          default: 0
          pattern: '^[0-9]+[KM]$'
        max_tries:
          description: Maximum amount of retries after failure, 0 for unlimited
          type: integer
          format: int32
          default: 5
        piece_length:
          description: Set the piece length in bytes
          type: string
          pattern: '^[0-9]+[KM]$'
          default: 5M
        pause:
          description: Pause on added
          type: boolean
          default: false
        integrity:
          description: Provide a checksum of the file to check its integrity
          type: object
          properties:
            type:
              type: string
              example: sha-1
            digest:
              type: string
              example: 0192ba11326fe2298c8cb4de616f4d4140213838
          required:
            - type
            - digest
        user_agent:
          description: The user agent to use
          type: string
          default: aria2/$VERSION
          example: Chrome/75.0.3770.142
        headers:
          description: Append additional headers
          type: array
          items:
            description: Header name/value pair
            type: object
            additionalProperties:
              type: string
          example:
            'X-Header': some value
            'Authentification': Bearer 123456789
        ftp:
          description: FTP auth information
          type: object
          properties:
            user:
              type: string
              default: anonymous
            passwd:
              type: string
              format: password
              default: ARIA2USER@
          required:
            - user
            - passwd
        http:
          description: HTTP basic auth info
          type: object
          properties:
            user:
              type: string
            passwd:
              type: string
          required:
            - user
            - passwd
        bt_trackers:
          description: An array of BitTorrent tracker's announce URI
          type: array
          items:
            type: string

    AriaFile:
      description: Represent a file from a download
      type: object
      properties:
        index:
          description: Index of file in the download, starts at 1
          type: integer
          format: int32
          example: 1
        path:
          description: Absolute file path
          type: string
          example: /some/path/to/file.txt
        uris:
          description: URIs used for this file
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/AriaUri'
      required:
        - index
        - path
        - uris

    AriaUri:
      description: Represent an URI
      type: object
      properties:
        uri:
          description: The URI
          type: string
          example: http://example.com/some/file.txt
        status:
          description: Whether this URI is used or queued
          type: string
          enum:
            - used
            - waiting
          example: used
      required:
        - uri
        - status
