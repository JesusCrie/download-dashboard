openapi: 3.0.0
# Added by API Auto Mocking Plugin
servers:
  - description: Localhost API
    url: http://localhost:8000
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/JesusCrie/DownloadDashboard/1.0.0
info:
  version: "1.0.0"
  title: Download Dashboard
  license:
    name: GPL-3.0
    url: https://github.com/JesusCrie/download-dashboard/blob/master/LICENSE
security:
  - jwtToken:
      - read
      - write
tags:
  - name: auth
  - name: metrics
  - name: aria2
paths:

  /auth:
    post:
      tags:
        - auth
      operationId: authCreate
      security: []
      summary: Acquire a JWT token
      description: |
        Acquire a JWT token in exchange of a password.
        A refresh token will also be supplied.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  format: password
                  example: AVeryGoodPassword123
              required: [password]
      responses:
        200:
          description: Authentification successfull
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    $ref: '#/components/schemas/JwtToken'
                  refreshToken:
                    $ref: '#/components/schemas/JwtToken'
                required: [token]
          links:
            refresh:
              operationId: authRefresh
        403:
          description: Unauthorized, wrong password
        422:
          description: Malformed payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableError'

  /auth/refresh:
    post:
      tags:
        - auth
      operationId: authRefresh
      summary: Refresh a JWT token
      description: |
        Acquire a new JWT token by providing a refresh token.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                refreshToken:
                  $ref: '#/components/schemas/JwtToken'
              required:
                - refresh_token
      responses:
        200:
          description: Authentification successfull
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    $ref: '#/components/schemas/JwtToken'
                required: [token]
        403:
          description: Invalid token provided
          links:
            login:
              operationId: authCreate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'

  /health:
    get:
      tags:
        - metrics
      operationId: healthCheck
      security: []
      summary: Check health of service
      description: |
        Check the health of the service based on the response code.
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    default: 200
                  message:
                    type: string
                    default: Ok
                required:
                  - code
                  - message
        503:
          description: Ko

  /status:
    get:
      tags:
        - metrics
      operationId: metricsGet
      summary: Gather metrics
      description: |
        Gather the status of the host.
        Invalid fields will be ignored.
      responses:
        200:
          description: Host status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusValues'
        403:
          description: Forbidden
          links:
            login:
              operationId: authCreate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'

  /aria2/stats:
    get:
      tags:
        - aria2
      summary: Query the global stats
      description: |
        Retrieve the global stat of aria
      operationId: ariaStat
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  downloadSpeed:
                    type: integer
                    example: 1000000
                  downloadActive:
                    type: integer
                    example: 2
                  downloadWaiting:
                    type: integer
                    example: 5
                  downloadStopped:
                    type: integer
                    example: 10
                required:
                  - downloadSpeed
                  - downloadActive
                  - downloadWaiting
                  - downloadStopped
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'

  /aria2/list:
    get:
      tags:
        - aria2
      operationId: ariaList
      summary: List aria2 tracks
      description: |
        Query the downloads in progress on the host
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AriaTrack'
        403:
          description: Forbidden
          links:
            login:
              operationId: authCreate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'

  /aria2/show/{gid}:
    get:
      tags:
        - aria2
      operationId: ariaShow
      summary: Get a specific aria2 track
      description: |
        Query a track by its GID
      parameters:
        - in: path
          name: gid
          description: The GID of the download to query
          required: true
          schema:
            $ref: '#/components/schemas/Gid'
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AriaTrack'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        403:
          description: Forbidden
          links:
            login:
              operationId: authCreate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'

  /aria2/new:
    post:
      tags:
        - aria2
      operationId: ariaNew
      summary: Queue a new download
      description: |
        Queue a new download with a list of URIs and an optional option parameters.
        Supports HTTP(S)/FTP/magnet URIs, see the option object for auth and trackers.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AriaTrackDef'
      responses:
        200:
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  gid:
                    type: string
                    minLength: 16
                    maxLength: 16
                    example: 2089b05ecca3d829
                required:
                  - gid
          links:
            show:
              operationId: ariaShow
        403:
          description: Forbidden
          links:
            login:
              operationId: authCreate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        422:
          description: Malformed payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableError'

  /aria2/resume:
    patch:
      tags:
        - aria2
      operationId: ariaResume
      summary: Resume a download (or all)
      description: |
        Resume the specified track or every track if the gid is omitted
      parameters:
        - in: query
          name: gid
          description: The gid of the track to resume
          required: false
          schema:
            $ref: '#/components/schemas/Gid'
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkResponse'
        403:
          description: Forbidden
          links:
            login:
              operationId: authCreate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'

  /aria2/pause:
    patch:
      tags:
        - aria2
      operationId: ariaPause
      summary: Pause a track (or all)
      description: |
        Pause the designated track.
      parameters:
        - in: query
          name: gid
          description: The GID of the track to pause
          required: false
          schema:
            $ref: '#/components/schemas/Gid'
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkResponse'
        403:
          description: Forbidden
          links:
            login:
              operationId: authCreate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        404:
          description: Track not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'

  /aria2/remove/{gid}:
    delete:
      tags:
        - aria2
      summary: Stop a track and removes it
      description: |
        Stop then remove a track from the download queue
      parameters:
        - in: path
          name: gid
          required: true
          description: The GID of the track to remove
          schema:
            $ref: '#/components/schemas/Gid'
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkResponse'

  /aria2/purge:
    delete:
      tags:
        - aria2
      operationId: ariaPurge
      summary: Free memory by removing the idle tracks
      description: |
        Purge the completed/removed/errored tracks from the memory.
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: Ok
                required:
                  - code
                  - message
        403:
          description: Forbidden
          links:
            login:
              operationId: authCreate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'

  /aria2/move/{gid}:
    patch:
      tags:
        - aria2
      summary: Move the track in the queue
      operationId: ariaMove
      parameters:
        - in: path
          name: gid
          description: The GID of the track to move
          required: true
          schema:
            $ref: '#/components/schemas/Gid'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                position:
                  type: integer
                  example: 0
                method:
                  type: string
                  enum:
                    - SET
                    - CUR
                    - END
                  example: SET
              required:
                - position
                - method
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  position:
                    type: integer
                    example: 0
                required:
                  - position
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        422:
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableError'

components:
  securitySchemes:
    jwtToken:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    UnprocessableError:
      description: Sent with a 403 status code
      type: object
      properties:
        error:
          type: boolean
          example: true
        code:
          type: integer
          example: 403
        message:
          type: string
          example: Unprocessable entity
        name:
          type: string
          example: JsonSchemaValidationError
        errors:
          type: array
          items:
            type: object
            properties:
              keyword:
                type: string
              dataPath:
                type: string
              schemaPath:
                type: string
              params:
                type: object
                additionalProperties:
                  anyOf:
                    - type: string
                    - type: number
                    - type: boolean
              message:
                type: string
            required:
              - keyword
              - dataPath
              - schemaPath
              - params
              - message
      required:
        - error
        - code
        - message
        - name
        - errors

    ForbiddenError:
      description: Triggered when not authenticated
      type: object
      properties:
        error:
          type: boolean
          example: true
        code:
          type: integer
          example: 403
        message:
          type: string
          example: Forbidden
      required:
        - error
        - code
        - message

    NotFoundError:
      description: Not found payload
      type: object
      properties:
        error:
          type: boolean
          example: true
        code:
          type: integer
          example: 404
        message:
          type: string
          example: Not found
      required:
        - error
        - code
        - message

    OkResponse:
      description: Ok
      type: object
      properties:
        code:
          type: integer
          example: 200
        message:
          type: string
          example: Ok
      required:
        - code
        - message

    Gid:
      description: An unique identifier for a track
      type: string
      minLength: 16
      maxLength: 16
      example: 2089b05ecca3d829

    JwtToken:
      description: A JWT auth token.
      type: string
      format: password
      example: xxxxx.yyyyy.zzzzz

    StatusValues:
      description: Represent the status of the host
      type: object
      properties:
        distro:
          description: Short name of the distro
          type: string
          example: Raspbian
        uptime:
          description: Seconds since startup
          type: integer
          format: int64
          example: 54687
        cpu:
          description: CPU load in percent
          type: number
          format: float
          example: 45.0556464213
        memory:
          description: Memory usage in percent
          type: number
          format: float
          example: 15.65472164
        netSpeed:
          description: Current network speed in bytes/s
          type: number
          format: float
          example: 5400.657684314
        disk:
          description: Partition usage in percent
          type: number
          format: float
          example: 43.52
        aria:
          description: Aria2 version or false if offline
          oneOf:
            - type: string
            - type: boolean
          example: 'v1.2.3'
        ariaActive:
          description: Amount of downloads in progress
          type: integer
          format: int32
          example: 25
      required:
        - distro
        - uptime
        - cpu
        - memory
        - netSpeed
        - disk
        - aria
        - ariaActive

    AriaTrack:
      description: Represent an aria2 download (track)
      type: object
      properties:
        gid:
          description: Unique identifier used by aria2
          type: string
          minLength: 16
          maxLength: 16
          example: 2089b05ecca3d829
        status:
          description: Current status of the download
          type: string
          enum:
            - active
            - waiting
            - paused
            - error
            - complete
            - removed
          example: active
        dir:
          description: Directory where the download will be saved
          type: string
          example: /some/path/to/folder
        files:
          description: Files composing the download (for multi torrents), usually only one element
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/AriaFile'
        sizeTotal:
          description: Total size in bytes
          type: integer
          format: int64
          example: 1750000000
        sizeCompleted:
          description: Downloaded size in bytes
          type: integer
          format: int64
          example: 1000000000
        pieceAmount:
          description: The amount of pieces
          type: integer
          format: int32
          example: 10
        pieceSize:
          description: The size of the pieces in bytes
          type: integer
          format: int64
          example: 10000000
        bitfield:
          description: Representation of the progress piece by piece
          type: string
          format: byte
          example: ffffffff
        connectionAmount:
          description: Amount of connections used for this track
          type: integer
          format: int32
          example: 2
        speedDown:
          description: Download speed in bytes/s
          type: integer
          format: int64
          example: 1500000
        addedAt:
          description: Timestamp when the download was added
          type: integer
          format: int64
          example: 1546300800
        elapsedTime:
          description: Cumulated amount of seconds downloading
          type: integer
          format: int64
          example: 5400
        error:
          description: The eventual error, only if stopped/completed
          type: object
          properties:
            code:
              description: Error code, equivalent to the EXIT_CODE
              type: integer
              format: int32
              example: 3
            message:
              description: Error message associated with error code
              type: string
              example: Not found
          required:
            - code
            - message
      required:
        - gid
        - status
        - dir
        - files
        - sizeTotal
        - sizeCompleted
        - pieceAmount
        - pieceSize
        - bitfield
        - connectionAmount
        - speedDown
        - addedAt
        - elapsedTime

    AriaTrackDef:
      description: Represent the information needed to queue a new track
      type: object
      properties:
        uris:
          description: A list of URIs pointing to the same resource; if a magnet URI, only the first will be used
          oneOf:
            - type: string
            - type: array
              items:
                type: string
              minItems: 1
          example: https://example.com/file.txt
        options:
          $ref: '#/components/schemas/AriaTrackOptions'
        position:
          description: The position of the track in the queue; 0 means on the top
          type: integer
          format: int32
          minimum: 0
          example: 0
      required:
        - uris

    AriaTrackOptions:
      description: The option to specify for one track
      type: object
      properties:
        dir:
          description: The directory to put the file to
          type: string
          example: /some/directory
        out:
          description: File name of the downloaded file, reltaive to dir
          type: string
          example: myFile.txt
        autoFileRenaming:
          description: Rename the file if it already exists
          type: boolean
          default: true
        maxConnectionsPerServer:
          description: Maxiumum connection to one server
          type: integer
          format: int32
          default: 1
          minimum: 0
        maxSpeed:
          description: Maximum download limit in bytes/s, 0 for unlimited
          type: string
          default: 0
          pattern: '^[0-9]+[KkMm]$'
        maxTries:
          description: Maximum amount of retries after failure, 0 for unlimited
          type: integer
          format: int32
          default: 5
        pieceLength:
          description: Set the piece length in bytes
          type: string
          pattern: '^[0-9]+[KkMm]$'
          default: 5M
        pause:
          description: Pause on added
          type: boolean
          default: false
        integrity:
          description: Provide a checksum of the file to check its integrity
          type: object
          properties:
            type:
              type: string
              example: sha-1
            digest:
              type: string
              example: 0192ba11326fe2298c8cb4de616f4d4140213838
          required:
            - type
            - digest
        userAgent:
          description: The user agent to use
          type: string
          default: aria2/$VERSION
          example: Chrome/75.0.3770.142
        headers:
          description: Append additional headers
          type: object
          additionalProperties:
            type: string
          example:
            'X-Header': some value
            'Authentification': Bearer 123456789

        ftp:
          description: FTP auth information
          type: object
          properties:
            user:
              type: string
              default: anonymous
            passwd:
              type: string
              format: password
              default: ARIA2USER@
          required:
            - user
            - passwd
        http:
          description: HTTP basic auth info
          type: object
          properties:
            user:
              type: string
            passwd:
              type: string
          required:
            - user
            - passwd
        btTrackers:
          description: An array of BitTorrent tracker's announce URI
          type: array
          items:
            type: string

    AriaFile:
      description: Represent a file from a download
      type: object
      properties:
        index:
          description: Index of file in the download, starts at 1
          type: integer
          format: int32
          example: 1
        path:
          description: Absolute file path
          type: string
          example: /some/path/to/file.txt
        uris:
          description: URIs used for this file
          type: array
          minItems: 1
          items:
            type: object
            properties:
              uri:
                type: string
                example: http://example.com/file.txt
              status:
                type: string
                enum: [used, waiting]
            required:
              - uri
              - status
      required:
        - index
        - path
        - uris
